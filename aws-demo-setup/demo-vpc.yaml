---
- hosts: localhost
  connection: local
  gather_facts: no

  vars:
    region: ap-southeast-2
    vpc_cidr: 10.10.0.0/24
    vpc_name: xz-vpc-by-ansible
    subnet_name: "Ansible Subnet"
    subnet_cidr: 10.10.0.0/26
    security_group_name: xz-sec-grp
    keypair_name: demo-ec2-key
    ami_id: ami-0c9d48b5db609ad6e
    igw_name: "xz ansible IGW"
    route_name: "Public test"

  tasks:  
    - name: create a vpc first
      ec2_vpc_net:
        name: "{{ vpc_name }}"
        cidr_block: "{{ vpc_cidr }}"
        region: "{{ region }}"
        state: present        
      register: vpc

    - name: get vpc id
      set_fact:
        vpc_id: "{{ vpc.vpc.id }}"

    - name: associate subnet to the VPC
      ec2_vpc_subnet:
        state: present
        vpc_id: "{{ vpc_id }}"
        region: "{{ region }}"
        cidr: "{{ subnet_cidr }}"
        map_public: yes
        resource_tags:
          Name: "{{ subnet_name }}"
      register: subnet

    - name: create IGW
      ec2_vpc_igw:
        vpc_id: "{{ vpc_id }}"
        region: "{{ region }}"        
        state: "present"
        tags:
          Name: "{{ igw_name }}"
      register: igw
    
    - name: set up IGW routes
      ec2_vpc_route_table:
        vpc_id: "{{ vpc_id }}"
        region: "{{ region }}"
        subnets:
          - "{{ subnet.subnet.id }}"
        routes:
          - dest: 0.0.0.0/0
            gateway_id: "{{ igw.gateway_id  }}"
        tags:
          Name: "{{ route_name }}"

    - name: example using security group rule descriptions
      ec2_group:
        name: "{{ security_group_name }}"
        description: test group for xz ansible vpc
        vpc_id: "{{ vpc_id }}"
        region: "{{ region }}"
        rules:
          - proto: tcp
            ports:
            - 80
            cidr_ip: 0.0.0.0/0
            rule_desc: allow web
          - proto: tcp
            ports:
            - 22
            cidr_ip: 0.0.0.0/0
            rule_desc: allow ssh
      register: security_group

    - name: Create a new EC2 key
      ec2_key:
        name: "{{ keypair_name }}"
        region: "{{ region }}"
      register: ec2_key_result

    - name: Save private key
      copy: content="{{ ec2_key_result.key.private_key }}" dest="./{{ keypair_name }}.pem" mode=0600
      when: ec2_key_result.changed

    - name: Provision EC2 Instance      
      ec2:
        key_name: "{{ keypair_name }}"
        group: "{{ security_group_name }}"
        instance_type: t3.micro
        image: "{{ ami_id }}"
        wait: true
        exact_count: 1
        region: "{{ region }}"
        vpc_subnet_id: "{{ subnet.subnet.id }}"
        count_tag:
          Name: Demo
        instance_tags:
          Name: Demo
      register: ec2
